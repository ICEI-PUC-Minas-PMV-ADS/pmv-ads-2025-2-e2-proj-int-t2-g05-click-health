// <auto-generated />
using System;
using ClickHealth.Dashboard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClickHealth.Dashboard.Migrations
{
    [DbContext(typeof(ClickHealthContext))]
    partial class ClickHealthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Alerta", b =>
                {
                    b.Property<int>("IdAlerta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_alerta");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_hora");

                    b.Property<long>("IdPaciente")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_paciente");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("mensagem");

                    b.HasKey("IdAlerta");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Alerta");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Cuidador", b =>
                {
                    b.Property<int>("IdCuidador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_cuidador");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo");

                    b.HasKey("IdCuidador");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Cuidador");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Dispositivo", b =>
                {
                    b.Property<int>("IdDispositivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_dispositivo");

                    b.Property<string>("Identificacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("identificacao");

                    b.Property<bool?>("StatusConexao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true)
                        .HasColumnName("status_conexao");

                    b.Property<string>("TipoDispositivo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo_dispositivo");

                    b.HasKey("IdDispositivo");

                    b.ToTable("Dispositivo");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.HistoricoMedico", b =>
                {
                    b.Property<long>("IdHistorico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_historico");

                    b.Property<string>("Alergias")
                        .HasColumnType("TEXT")
                        .HasColumnName("alergias");

                    b.Property<DateTime?>("AtualizadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("atualizado_em")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("DiagnosticosPassados")
                        .HasColumnType("TEXT")
                        .HasColumnName("diagnosticos_passados");

                    b.Property<long>("IdPaciente")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_paciente");

                    b.Property<string>("Intervencoes")
                        .HasColumnType("TEXT")
                        .HasColumnName("intervencoes");

                    b.Property<string>("Procedimentos")
                        .HasColumnType("TEXT")
                        .HasColumnName("procedimentos");

                    b.HasKey("IdHistorico");

                    b.HasIndex("IdPaciente")
                        .IsUnique();

                    b.ToTable("HistoricoMedico");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.LogAuditoria", b =>
                {
                    b.Property<long>("IdLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_log");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("acao");

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_hora");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdLog");

                    b.HasIndex("IdUsuario");

                    b.ToTable("LogAuditoria");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Medicacao", b =>
                {
                    b.Property<int>("IdMedicacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_medicacao");

                    b.Property<string>("Dosagem")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("dosagem");

                    b.Property<string>("Frequencia")
                        .HasColumnType("TEXT")
                        .HasColumnName("frequencia");

                    b.Property<DateTime?>("HorarioAdministracao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("horario_administracao");

                    b.Property<long>("IdPaciente")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_paciente");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("IdMedicacao");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Medicacao");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.MonitoramentoSaude", b =>
                {
                    b.Property<int>("IdMonitoramento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_monitoramento");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_hora");

                    b.Property<int?>("FrequenciaCardiaca")
                        .HasColumnType("INTEGER")
                        .HasColumnName("frequencia_cardiaca");

                    b.Property<decimal?>("Glicose")
                        .HasColumnType("DECIMAL(5,2)")
                        .HasColumnName("glicose");

                    b.Property<int?>("IdDispositivo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_dispositivo");

                    b.Property<long>("IdPaciente")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_paciente");

                    b.Property<string>("PressaoArterial")
                        .HasColumnType("TEXT")
                        .HasColumnName("pressao_arterial");

                    b.Property<decimal?>("Temperatura")
                        .HasColumnType("DECIMAL(4,1)")
                        .HasColumnName("temperatura");

                    b.HasKey("IdMonitoramento");

                    b.HasIndex("IdDispositivo");

                    b.HasIndex("IdPaciente");

                    b.ToTable("MonitoramentoSaude");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Paciente", b =>
                {
                    b.Property<long>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_paciente");

                    b.Property<string>("CondicoesMedicas")
                        .HasColumnType("TEXT")
                        .HasColumnName("condicoes_medicas");

                    b.Property<string>("DadosPessoais")
                        .HasColumnType("TEXT")
                        .HasColumnName("dados_pessoais");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdPaciente");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.SessaoUsuario", b =>
                {
                    b.Property<int>("IdSessao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_sessao");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_inicio");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_usuario");

                    b.Property<string>("TokenSessao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("token_sessao");

                    b.HasKey("IdSessao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("SessaoUsuario");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.TentativaLogin", b =>
                {
                    b.Property<int>("IdTentativa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_tentativa");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_hora");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_usuario");

                    b.Property<string>("IpOrigem")
                        .HasColumnType("TEXT")
                        .HasColumnName("ip_origem");

                    b.Property<string>("Resultado")
                        .HasColumnType("TEXT")
                        .HasColumnName("resultado");

                    b.HasKey("IdTentativa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TentativaLogin");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Usuario", b =>
                {
                    b.Property<long>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_usuario");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT")
                        .HasColumnName("estado");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("senha_hash");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Alerta", b =>
                {
                    b.HasOne("ClickHealth.Dashboard.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("Alertas")
                        .HasForeignKey("IdPaciente")
                        .IsRequired();

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Cuidador", b =>
                {
                    b.HasOne("ClickHealth.Dashboard.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Cuidadores")
                        .HasForeignKey("IdUsuario")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.HistoricoMedico", b =>
                {
                    b.HasOne("ClickHealth.Dashboard.Models.Paciente", "IdPacienteNavigation")
                        .WithOne("HistoricoMedico")
                        .HasForeignKey("ClickHealth.Dashboard.Models.HistoricoMedico", "IdPaciente")
                        .IsRequired();

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.LogAuditoria", b =>
                {
                    b.HasOne("ClickHealth.Dashboard.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("LogsAuditoria")
                        .HasForeignKey("IdUsuario")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Medicacao", b =>
                {
                    b.HasOne("ClickHealth.Dashboard.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("Medicacoes")
                        .HasForeignKey("IdPaciente")
                        .IsRequired();

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.MonitoramentoSaude", b =>
                {
                    b.HasOne("ClickHealth.Dashboard.Models.Dispositivo", "IdDispositivoNavigation")
                        .WithMany("MonitoramentosSaude")
                        .HasForeignKey("IdDispositivo");

                    b.HasOne("ClickHealth.Dashboard.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("MonitoramentosSaude")
                        .HasForeignKey("IdPaciente")
                        .IsRequired();

                    b.Navigation("IdDispositivoNavigation");

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Paciente", b =>
                {
                    b.HasOne("ClickHealth.Dashboard.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdUsuario")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.SessaoUsuario", b =>
                {
                    b.HasOne("ClickHealth.Dashboard.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("SessoesUsuario")
                        .HasForeignKey("IdUsuario")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.TentativaLogin", b =>
                {
                    b.HasOne("ClickHealth.Dashboard.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("TentativasLogin")
                        .HasForeignKey("IdUsuario")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Dispositivo", b =>
                {
                    b.Navigation("MonitoramentosSaude");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Paciente", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("HistoricoMedico");

                    b.Navigation("Medicacoes");

                    b.Navigation("MonitoramentosSaude");
                });

            modelBuilder.Entity("ClickHealth.Dashboard.Models.Usuario", b =>
                {
                    b.Navigation("Cuidadores");

                    b.Navigation("LogsAuditoria");

                    b.Navigation("Pacientes");

                    b.Navigation("SessoesUsuario");

                    b.Navigation("TentativasLogin");
                });
#pragma warning restore 612, 618
        }
    }
}
